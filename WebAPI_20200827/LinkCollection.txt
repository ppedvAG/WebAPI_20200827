
Linq 101 Sample:
https://linqsamples.com/

Linq 101 Sample (mit Download):
https://docs.microsoft.com/en-us/samples/dotnet/try-samples/101-linq-samples/



Mit Attribut Routing kann in gewissen Mustern die Performance erhöhen. 
https://docs.microsoft.com/de-de/aspnet/web-api/overview/web-api-routing-and-actions/attribute-routing-in-web-api-2




TODO: 

-OAuth2 Bearer Token
https://www.youtube.com/watch?v=_LdiqQ13NBo

Praktisches Beispiel:





Formatting with x-protobuf
-> https://github.com/Apress/asp.net-web-api-2-recipes/tree/master/Chapter%204/4-2/Apress.Recipes.WebApi
UnitTest zum Lib- Paket
https://github.com/WebApiContrib/WebApiContrib.Formatting.ProtoBuf/blob/master/test/WebApiContrib.Formatting.ProtoBuf.Test/ProtoBufFormatterTest.cs



HATEOAS + DataShaping

https://code-maze.com/hateoas-aspnet-core-web-api/
https://code-maze.com/data-shaping-aspnet-core-webapi/
https://github.com/CodeMazeBlog/advanced-rest-concepts-aspnetcore/tree/hateoas-end


Benchmark Languages:
https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/csharp.html

authentication-filters:
https://docs.microsoft.com/de-de/aspnet/web-api/overview/security/authentication-filters


Dependency Injection - Inverion of Control (Pattern) 
Inversion of Control verwendet das Dependency Injection Pattern 

In .NET Framework 4.5 - 4.8 Autofac ist der schnellste Container


Zusätzlich zu Dependency Injection -> https://en.wikipedia.org/wiki/Interface_segregation_principle
Interface_segregation_principle


Design Patterns = Martin Fowler -> https://martinfowler.com/

Julia Lernman (Authorin im Microsoft Umfeld) ->https://thedatafarm.com/
Dino Esposito 
Eric Evans

